syntax = "proto3";

package raftprotos;

option go_package = "./raftprotos";

import "log_entry.proto";


message RaftMessage {
  oneof message {
    AppendEntriesRequest append_entries_request = 1;
    AppendEntriesResponse append_entries_response = 2;
    RequestVoteRequest request_vote_request = 3;
    RequestVoteResponse request_vote_response = 4;
    ClientRequest client_request = 5;
    ClientReply client_reply = 6;
    InstallSnapshotRequest install_snapshot_request = 7;
    InstallSnapshotResponse install_snapshot_response = 8;
  }
}

// Message for AppendEntries request
message AppendEntriesRequest {
  int32 term = 1;
  int32 leaderId = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int32 leaderCommit = 6;
}

message AppendEntriesResponse {
  int32 term = 1;
  int32 followerId = 2;
  int32 ackedIdx = 3;
  bool success = 4;
}

message RequestVoteRequest {
  int32 term = 1;
  int32 candidateId = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

message RequestVoteResponse {
  int32 term = 1;
  bool voteGranted = 2;
  int32 voterId = 3;
}

message ClientRequest {
  int32 commandID = 1;
  string command = 2;
  string replyAddress = 3;
  int32 replyPort = 4;
}

message ClientReply {
  int32 commandID = 1;
  string output = 2;
  bool amLeader = 3;
  int32 leaderId = 4;
}

message InstallSnapshotRequest {
  int32 term = 1;
  int32 leaderId = 2;
  int32 lastIncludedIndex = 3;
  int32 lastIncludedTerm = 4;
  bytes data = 5;
}

message InstallSnapshotResponse {
  int32 term = 1;
  bool success = 2;
}